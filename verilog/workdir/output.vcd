$date
	Sat Sep 30 09:56:48 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module fifo_tb $end
$var wire 1 ! out_data_rdy $end
$var wire 3 " out_data_ptr [2:0] $end
$var wire 32 # out_data [31:0] $end
$var wire 4 $ fifo_size [3:0] $end
$var wire 1 % event_underrun $end
$var wire 1 & event_overflow $end
$var reg 1 ' clk $end
$var reg 1 ( flush_fifo $end
$var reg 32 ) in_data [31:0] $end
$var reg 1 * in_data_vld $end
$var reg 1 + out_data_vld $end
$var reg 1 , rstn $end
$var integer 32 - i [31:0] $end
$scope module fifo_0 $end
$var wire 1 ' clk $end
$var wire 1 % event_underrun $end
$var wire 1 ( flush_fifo $end
$var wire 32 . in_data [31:0] $end
$var wire 1 * in_data_vld $end
$var wire 1 / internal_reset $end
$var wire 32 0 out_data [31:0] $end
$var wire 3 1 out_data_ptr [2:0] $end
$var wire 1 + out_data_vld $end
$var wire 1 , rstn $end
$var wire 1 ! out_data_rdy $end
$var wire 4 2 fifo_size_ns [3:0] $end
$var wire 3 3 fifo_head_ptr_ns [2:0] $end
$var wire 1 & event_overflow $end
$var wire 3 4 current_data_ptr_ns [2:0] $end
$var reg 3 5 current_data_ptr [2:0] $end
$var reg 3 6 fifo_data_out_ptr [2:0] $end
$var reg 3 7 fifo_head_ptr [2:0] $end
$var reg 4 8 fifo_size [3:0] $end
$var integer 32 9 i [31:0] $end
$upscope $end
$upscope $end
$scope module fifo_tb $end
$scope module fifo_0 $end
$var reg 32 : \data[0] [31:0] $end
$upscope $end
$upscope $end
$scope module fifo_tb $end
$scope module fifo_0 $end
$var reg 32 ; \data[1] [31:0] $end
$upscope $end
$upscope $end
$scope module fifo_tb $end
$scope module fifo_0 $end
$var reg 32 < \data[2] [31:0] $end
$upscope $end
$upscope $end
$scope module fifo_tb $end
$scope module fifo_0 $end
$var reg 32 = \data[3] [31:0] $end
$upscope $end
$upscope $end
$scope module fifo_tb $end
$scope module fifo_0 $end
$var reg 32 > \data[4] [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
1/
bx .
b101 -
1,
0+
0*
bx )
0(
0'
x&
0%
bx $
bx #
bx "
x!
$end
#1
0/
0,
#5
b0 2
b0 3
b0 4
b0 6
b0 #
b0 0
b0 "
b0 1
b0 7
0&
0!
b0 $
b0 8
b0 5
b0 >
b0 =
b0 <
b0 ;
b0 :
b101 9
1'
#10
0'
#15
b0 >
b0 =
b0 <
b0 ;
b0 :
b101 9
1'
#20
0'
#21
1/
1,
#25
b0 :
1'
#30
0'
#35
b0 :
1'
#40
0'
#45
b0 :
1'
#50
0'
#55
b0 :
1'
#60
0'
#65
b0 :
1'
#70
0'
#71
b1 2
b1 4
b1 )
b1 .
1*
#75
b10 2
b10 4
1!
b1 $
b1 8
b1 5
b1 :
b1 #
b1 0
1'
#80
0'
#81
b10 )
b10 .
#85
b11 2
b11 4
b10 $
b10 8
b10 5
b10 ;
1'
#90
0'
#91
b10 2
b10 4
0*
#95
b0 <
1'
#100
0'
#101
b1 3
b11 4
b11 )
b11 .
1*
1+
#105
b10 3
b100 4
b10 #
b10 0
b1 "
b1 1
b1 7
b11 5
b11 <
1'
#110
0'
#111
b1 2
b11 4
0*
#115
b0 2
b11 3
b1 $
b1 8
b11 #
b11 0
b10 "
b10 1
b10 7
b0 =
1'
#120
0'
#121
b1 2
b10 3
0+
#125
b0 =
1'
#130
0'
#131
b10 2
b100 4
b100 )
b100 .
1*
#135
b11 2
b101 4
b10 $
b10 8
b100 5
b100 =
1'
#140
0'
#141
b101 )
b101 .
#145
b100 2
b1 4
b11 $
b11 8
b0 5
b101 >
1'
#150
0'
#151
b110 )
b110 .
#155
b101 2
b10 4
b100 $
b100 8
b1 5
b110 :
1'
#160
0'
#161
b111 )
b111 .
#165
b110 2
b11 4
b101 $
b101 8
b10 5
b111 ;
1'
#170
0'
#171
b1000 )
b1000 .
#175
b111 2
b100 4
1&
b110 $
b110 8
b11 5
b1000 <
b1000 #
b1000 0
1'
#180
0'
#181
b110 2
b11 4
0*
#185
b100 =
1'
#190
0'
#195
b100 =
1'
#200
0'
#205
b100 =
1'
#210
0'
#215
b100 =
1'
#220
0'
#225
b100 =
1'
#230
0'
#231
0/
1(
#235
b0 2
b0 3
b0 4
b0 "
b0 1
b0 7
0&
0!
b0 $
b0 8
b0 5
b0 >
b0 =
b0 <
b0 #
b0 0
b0 ;
b0 :
b101 9
1'
#240
0'
#241
1/
0(
#245
b0 :
1'
#250
0'
#255
b0 :
1'
#260
0'
#265
b0 :
1'
#270
0'
#275
b0 :
1'
#280
0'
#285
b0 :
1'
#290
0'
#291
